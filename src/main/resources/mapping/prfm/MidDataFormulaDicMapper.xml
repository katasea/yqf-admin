<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.main.dao.prfm.MidDataFormulaDicDao">
    <resultMap id="BaseResultMap" type="com.main.pojo.prfm.MidDataFormulaDic">
        <id column="pkid" property="pkid" jdbcType="VARCHAR"/>
        <id column="companyid" property="companyid" jdbcType="VARCHAR"/>
        <id column="id" property="id" jdbcType="VARCHAR"/>
	    <result column="orderid" property="orderid" jdbcType="INTEGER"/>
	    <result column="name" property="name" jdbcType="VARCHAR"/>
	    <result column="formula" property="formula" jdbcType="VARCHAR"/>
	    <result column="isstop" property="isstop" jdbcType="VARCHAR"/>
	    <result column="dec" property="dec" jdbcType="INTEGER"/>
	    <result column="deptorper" property="deptorper" jdbcType="INTEGER"/>
	    <result column="caclfalg" property="caclfalg" jdbcType="INTEGER"/>
	    <result column="failreason" property="failreason" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    pkid,companyid,id,orderid,name,formula,isstop,dec,caclfalg,failreason,deptorper
    </sql>


    <sql id="Add_Column_List">
    pkid,companyid,id,orderid,name,formula,isstop,dec,caclfalg,failreason,deptorper
    </sql>
    <select id="selectByid" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
    from PD_MIDDATAFORMULADIC
        where pkid = #{id}
    </select>
    <select id="getAutoGeneralID" resultType="java.util.Map">
        select max(orderid) as id from PD_MIDDATAFORMULADIC where 1=1
    </select>
    <select id="getCount" resultType="java.util.Map">
        select count(1) as count
    from PD_MIDDATAFORMULADIC
        where 1=1
        and companyid = #{companyid}
        and id = #{midBh}
        <choose>
            <when test="keyword != null and keyword != '' and keyword != 'null' and keyword != '请输入关键字'">
                and ( id like '${keyword}%' or name like '${keyword}%' )
            </when>
        </choose>
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
    from PD_MIDDATAFORMULADIC
        where 1=1 and companyid = #{companyid}
        order by orderid
    </select>

    <!--如果不是带年份的表，需要自己加入年份过滤，这里不好知道年份字段的数据库名称 -->
    <select id="validator" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
    from PD_MIDDATAFORMULADIC
        where 1=1 and ${key} = #{value} and companyid = #{bridge.companyid}
    </select>


    <select id="get" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
    from PD_MIDDATAFORMULADIC
        where 1=1 and companyid = #{companyid}
        <choose>
            <when test="keyword != null and keyword != '' and keyword != 'null' and keyword != '请输入关键字'">
            and ( id like '${keyword}%' or name like '${keyword}%'
            </when>
            <otherwise>
            </otherwise>
        </choose>
        order by id
    </select>

    <select id="getPage" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from
        (
            select
            <include refid="Base_Column_List"/>
            ,row_number() over
            (
            order by
                 companyid,id,orderid asc
            ) n
           from PD_MIDDATAFORMULADIC
            where 1=1
            and companyid = #{companyid}
            and id = #{midBh}
            <choose>
                <when test="keyword != null and keyword != '' and keyword != 'null' and keyword != '请输入关键字'">
                    and (
                          id like '${keyword}%'
                           or
                          name like '${keyword}%'
                                              )
                </when>
            </choose>
        ) a
        where a.n &gt; #{start}
        and a.n &lt;= #{end}
    </select>

    <insert id="insert" parameterType="map">
        insert into
            PD_MIDDATAFORMULADIC
        (
        <include refid="Add_Column_List"/>
        )
        values(newid(),#{companyid},#{id},#{orderid},#{name},#{formula},#{isstop},#{dec},#{caclfalg},#{failreason},#{deptorper})
    </insert>

    <update id="update" parameterType="map">
        update
            PD_MIDDATAFORMULADIC
        set
                companyid = #{companyid},
                id = #{id},
                orderid = #{orderid},
                name = #{name},
                formula = #{formula},
                deptorper = #{deptorper},
                isstop = #{isstop},
                dec = #{dec},
                caclfalg = #{caclfalg},
                failreason = #{failreason}        where pkid = #{whereId}
    </update>
    <update id="updateCalcSucc">
        update PD_MIDDATAFORMULADIC SET caclfalg = 1 where pkid in (
        <foreach collection="calcMidFormulaInfo" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="updateCalcError">
        update PD_MIDDATAFORMULADIC SET caclfalg = 2 ,failreason = #{errormsg} where pkid = #{errorcode}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="map">
        delete from
            PD_MIDDATAFORMULADIC
        where pkid = #{id}
    </delete>
    <delete id="deleteAll">
          delete from PD_MIDDATAFORMULADIC where 1=1

    </delete>
</mapper>